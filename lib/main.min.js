!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).SessionStorage={})}(this,function(t){"use strict";class e{static set(t,e){const s={data:e instanceof Function?e():e};sessionStorage.setItem(t,JSON.stringify(s))}static get(t,e=null){var s;const n=sessionStorage.getItem(t);if(null===n)return e instanceof Function?e():null!=e?e:null;try{const t=JSON.parse(n);return null!==(s=t.data)&&void 0!==s?s:t}catch(t){return n}}static remember(t,s){const n=e.get(t);return null===n&&e.set(t,s),null!=n?n:e.get(t)}static all(){const t=Object.assign({},sessionStorage);for(const s in t)t[s]=e.get(s);return t}static remove(t){sessionStorage.removeItem(t)}static clear(){sessionStorage.clear()}static has(t){return!!e.get(t)}static hasAny(t){return(t=t instanceof Array?t:[...arguments]).filter(t=>e.has(t)).length>0}static isEmpty(){return 0===Object.keys(e.all()).length}static isNotEmpty(){return!e.isEmpty()}static keys(){return Object.keys(sessionStorage)}static count(){return sessionStorage.length}static dump(t){console.log(e.get(t))}}"undefined"!=typeof window&&(window.SessionStorage=e),"undefined"!=typeof global&&(global.SessionStorage=e),t.SessionStorage=e});
//# sourceMappingURL=main.min.js.map
